{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass ApiService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.API_URL = 'http://localhost:8080/api';\n  }\n  // Projects\n  getPublicProjects() {\n    return this.http.get(`${this.API_URL}/public/projects`);\n  }\n  getAllProjects() {\n    return this.http.get(`${this.API_URL}/admin/projects`, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  createProject(project) {\n    return this.http.post(`${this.API_URL}/admin/projects`, project, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  updateProject(id, project) {\n    return this.http.put(`${this.API_URL}/admin/projects/${id}`, project, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  deleteProject(id) {\n    return this.http.delete(`${this.API_URL}/admin/projects/${id}`, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  // Services\n  getServices() {\n    return this.http.get(`${this.API_URL}/public/services`);\n  }\n  // Partners\n  getPartners() {\n    return this.http.get(`${this.API_URL}/public/partners`);\n  }\n  // Company Info\n  getCompanyInfo() {\n    return this.http.get(`${this.API_URL}/public/company`);\n  }\n  updateCompanyInfo(info) {\n    return this.http.put(`${this.API_URL}/admin/company`, info, {\n      headers: this.authService.getAuthHeaders()\n    });\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ApiService };","map":{"version":3,"names":["ApiService","constructor","http","authService","API_URL","getPublicProjects","get","getAllProjects","headers","getAuthHeaders","createProject","project","post","updateProject","id","put","deleteProject","delete","getServices","getPartners","getCompanyInfo","updateCompanyInfo","info","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\GIT\\GitHub\\IGA\\frontend\\src\\app\\core\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Project, Service, Partner, CompanyInfo } from '../models/models';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private readonly API_URL = 'http://localhost:8080/api';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  // Projects\r\n  getPublicProjects(): Observable<Project[]> {\r\n    return this.http.get<Project[]>(`${this.API_URL}/public/projects`);\r\n  }\r\n\r\n  getAllProjects(): Observable<Project[]> {\r\n    return this.http.get<Project[]>(`${this.API_URL}/admin/projects`, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  createProject(project: Partial<Project>): Observable<Project> {\r\n    return this.http.post<Project>(`${this.API_URL}/admin/projects`, project, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  updateProject(id: number, project: Partial<Project>): Observable<Project> {\r\n    return this.http.put<Project>(`${this.API_URL}/admin/projects/${id}`, project, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  deleteProject(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.API_URL}/admin/projects/${id}`, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Services\r\n  getServices(): Observable<Service[]> {\r\n    return this.http.get<Service[]>(`${this.API_URL}/public/services`);\r\n  }\r\n\r\n  // Partners\r\n  getPartners(): Observable<Partner[]> {\r\n    return this.http.get<Partner[]>(`${this.API_URL}/public/partners`);\r\n  }\r\n\r\n  // Company Info\r\n  getCompanyInfo(): Observable<CompanyInfo> {\r\n    return this.http.get<CompanyInfo>(`${this.API_URL}/public/company`);\r\n  }\r\n\r\n  updateCompanyInfo(info: Partial<CompanyInfo>): Observable<CompanyInfo> {\r\n    return this.http.put<CompanyInfo>(`${this.API_URL}/admin/company`, info, {\r\n      headers: this.authService.getAuthHeaders()\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;AAMA,MAGaA,UAAU;EAGrBC,YACUC,IAAgB,EAChBC,WAAwB;IADxB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IAJJ,KAAAC,OAAO,GAAG,2BAA2B;EAKnD;EAEH;EACAC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,kBAAkB,CAAC;EACpE;EAEAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,iBAAiB,EAAE;MAChEI,OAAO,EAAE,IAAI,CAACL,WAAW,CAACM,cAAc;KACzC,CAAC;EACJ;EAEAC,aAAaA,CAACC,OAAyB;IACrC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAU,GAAG,IAAI,CAACR,OAAO,iBAAiB,EAAEO,OAAO,EAAE;MACxEH,OAAO,EAAE,IAAI,CAACL,WAAW,CAACM,cAAc;KACzC,CAAC;EACJ;EAEAI,aAAaA,CAACC,EAAU,EAAEH,OAAyB;IACjD,OAAO,IAAI,CAACT,IAAI,CAACa,GAAG,CAAU,GAAG,IAAI,CAACX,OAAO,mBAAmBU,EAAE,EAAE,EAAEH,OAAO,EAAE;MAC7EH,OAAO,EAAE,IAAI,CAACL,WAAW,CAACM,cAAc;KACzC,CAAC;EACJ;EAEAO,aAAaA,CAACF,EAAU;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACb,OAAO,mBAAmBU,EAAE,EAAE,EAAE;MACpEN,OAAO,EAAE,IAAI,CAACL,WAAW,CAACM,cAAc;KACzC,CAAC;EACJ;EAEA;EACAS,WAAWA,CAAA;IACT,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,kBAAkB,CAAC;EACpE;EAEA;EACAe,WAAWA,CAAA;IACT,OAAO,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,kBAAkB,CAAC;EACpE;EAEA;EACAgB,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAClB,IAAI,CAACI,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,iBAAiB,CAAC;EACrE;EAEAiB,iBAAiBA,CAACC,IAA0B;IAC1C,OAAO,IAAI,CAACpB,IAAI,CAACa,GAAG,CAAc,GAAG,IAAI,CAACX,OAAO,gBAAgB,EAAEkB,IAAI,EAAE;MACvEd,OAAO,EAAE,IAAI,CAACL,WAAW,CAACM,cAAc;KACzC,CAAC;EACJ;;;uBAxDWT,UAAU,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAV5B,UAAU;MAAA6B,OAAA,EAAV7B,UAAU,CAAA8B,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA;;SAEP/B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}